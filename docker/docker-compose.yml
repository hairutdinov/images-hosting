version: '3.2'

services:
  php:
    build: ./php/
    container_name: $PHP_CONTAINER_NAME
    working_dir: /var/www/html
    volumes:
      - ../src/:/var/www/html
      - ../.env:/var/www/.env
      - ./php:/usr/local/etc/php
  nginx:
    build: ./nginx/
    container_name: $NGINX_CONTAINER_NAME
    restart: always
    ports:
      - "${NGINX_FRONTEND_EXPOSE_PORT}:${NGINX_FRONTEND_PORT}"
      - "${NGINX_BACKEND_EXPOSE_PORT}:${NGINX_BACKEND_PORT}"
      - "${NGINX_API_EXPOSE_PORT}:${NGINX_API_PORT}"
    volumes:
      - ../src/:/var/www/html:ro
      - ./nginx/logs:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/snippets:/etc/nginx/snippets
  db:
    image: mysql:8.3.0
    container_name: $DB_CONTAINER_NAME
    restart: always
    ports:
      - "${DB_EXPOSE_PORT}:${DB_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
      - ./mysql/data:/var/lib/mysql/
#  db:
#    build:
#      context: ./postgresql/
#    container_name: $DB_CONTAINER_NAME
#    working_dir: /var/lib/postgresql
#    healthcheck:
#      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
#      timeout: 45s
#      interval: 10s
#      retries: 5
#    restart: always
#    ports:
#      - "${DB_EXPOSE_PORT}:${DB_PORT}"
#    volumes:
#      - ./postgresql/data:/var/lib/postgresql/data
##      - ./postgresql/init/:/docker-entrypoint-initdb.d/
#    environment:
#      - POSTGRES_USER=$DB_USERNAME
#      - POSTGRES_PASSWORD=$DB_PASSWORD
#      - POSTGRES_DB=$DB_NAME
#      - TZ=$TZ
#      - PGTZ=$PGTZ

